
@{
    ViewBag.Title = "Index";
}

<div id="frmIndexROLES">
    <div class="form-horizontal">
        <div class="panel panel-default">

            <div class="panel-body">
                <div id="gridContainer"></div>
            </div>
        </div>
    </div>
</div>

<script>
    var storeTipo = [{ ETjSTip: 'C', ETjSTipDes: 'CIRCULAR' }, { ETjSTip: 'R', ETjSTipDes: 'RECTILIEOS' }];
    var storeEstado = [{ ESTADO: 'A', ESTADO_DES: 'Activo' }, { ESTADO: 'I', ESTADO_DES: 'Inactivo' }]
    $(() => {
        const DxSource = new DevExpress.data.CustomStore({
            key: 'EtjID',
            load() {
                return sendRequest(`/EstructuraTejido/ListarEstructuraTej_all`);
            },
            insert(values) {
                return sendRequest(`/EstructuraTejido/InsertEstructuraTej`, 'POST', JSON.stringify(values));
            },
            update(key, values) {
                values.EtjID = key;
                return sendRequest(`/EstructuraTejido/UpdateEstrucTej`, 'PUT', JSON.stringify(values));
            },
            remove(key) {
                var values = { EtjID: key }
                //values.IdUbicacion = key;
                return sendRequest(`/EstructuraTejido/DeleteEstrucTej`, 'DELETE', JSON.stringify(values));
            },
        });
        console.log(DxSource);
        const dataGrid =
        $('#gridContainer').dxDataGrid({
            dataSource: DxSource,
            keyExpr: 'EtjID',
            editing: {
                mode: 'popup',
                allowUpdating: true,
                useIcons: true,
                allowAdding: true,
                allowDeleting: true,
                popup: {
                    title: 'ESTRUCTURA DE TEJIDO',
                    showTitle: true,
                    width: 700,
                    height: 310,
                },
                form: {
                    items: [{
                        itemType: 'group',
                        colSpan: 2,
                        items: ['ETjDDes', 'ETjDMne','ETjSTip'],
                    }],
                },
            },
            columns: [
                { dataField: 'ETJCCOD', caption: 'Codigo', },
                { dataField: 'ETjDDes', caption: 'Nombre', },
                { dataField: 'ETjDMne', caption: 'Abreviatura', },
                {
                    dataField: 'ETjSTip', caption: 'Tipo', lookup: {
                        dataSource: storeTipo,
                        valueExpr: 'ETjSTip',
                        displayExpr: 'ETjSTipDes',
                    }, },
                {
                    dataField: 'ESTADO', caption: 'Estado', lookup: {
                        dataSource: storeEstado,
                        valueExpr: 'ESTADO',
                        displayExpr: 'ESTADO_DES',
                    }
                },
                {
                    dataField: 'FechaReg',
                    caption: 'Fecha Creación',
                    dataType: 'datetime',
                    format: "dd/MM/yyyy"
                },
                { dataField: 'USUARIO_REG', caption: 'Usuario Registro', },
                { dataField: 'HOST_REG', caption: 'PC', },
                {
                    dataField: 'FECHA_ACT',
                    caption: 'Fecha Modificación',
                    dataType: 'datetime',
                    format: "dd/MM/yyyy"
                },
                { dataField: 'USUARIO_ACT', caption: 'Usuario Modificación', },
                { dataField: 'HOST_ACT', caption: 'PC edit', },
            ],
            toolbar: {
                items: [
                    {
                        location: "after",
                        widget: "dxButton",
                        options: {
                            icon: "add",
                            text: "AGREGAR",
                            onClick: function () {
                                dataGrid.addRow();
                            }
                        },
                    }, {
                        location: 'after',
                        widget: 'dxButton',
                        options: {
                            icon: 'refresh',
                            text: "ACTUALIZAR",
                            onClick() {
                                dataGrid.refresh();
                            },
                        },
                    },
                    'exportButton',
                ],
            },
            hoverStateEnabled: true,
            filterRow: { visible: true },
            showColumnLines: true,
            showRowLines: true,
            rowAlternationEnabled: true,
            showBorders: true,
            selection: {
                mode: 'single',
            },
            export: {
                enabled: true,
            },
            onExporting(e) {
                const workbook = new ExcelJS.Workbook();
                const worksheet = workbook.addWorksheet('data');

                DevExpress.excelExporter.exportDataGrid({
                    component: e.component,
                    worksheet,
                    autoFilterEnabled: true,
                }).then(() => {
                    workbook.xlsx.writeBuffer().then((buffer) => {
                        saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'data.xlsx');
                    });
                });
                e.cancel = true;
            },
        }).dxDataGrid('instance');

        console.log(dataGrid);
        console.log(dataGrid.getDataSource());

    });


</script>
